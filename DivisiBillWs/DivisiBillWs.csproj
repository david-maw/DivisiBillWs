<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <TargetFramework>net8.0-windows</TargetFramework>
    <AzureFunctionsVersion>v4</AzureFunctionsVersion>
    <OutputType>Exe</OutputType>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>
    <Version>1.3.12</Version>
  </PropertyGroup>
  <ItemGroup>
    <PackageReference Include="Azure.Data.Tables" Version="12.10.0" />
    <PackageReference Include="Google.Apis" Version="1.69.0" />
    <PackageReference Include="Google.Apis.AndroidPublisher.v3" Version="1.68.0.3654" />
    <PackageReference Include="Google.Apis.Auth" Version="1.69.0" />
    <PackageReference Include="HttpMultipartParser" Version="9.0.0" />
    <PackageReference Include="Microsoft.ApplicationInsights.WorkerService" Version="2.22.0" />
    <PackageReference Include="Microsoft.Azure.Functions.Worker" Version="2.0.0" />
    <PackageReference Include="Microsoft.Azure.Functions.Worker.Extensions.Http" Version="3.3.0" />
    <PackageReference Include="Microsoft.Azure.Functions.Worker.Sdk" Version="2.0.0" />
    <PackageReference Include="Azure.AI.FormRecognizer" Version="4.1.0" />
    <PackageReference Include="Microsoft.Azure.Functions.Worker.Extensions.Http.AspNetCore" Version="2.0.1" />
    <PackageReference Include="Sentry.Azure.Functions.Worker" Version="5.1.1" />
  </ItemGroup>
  <ItemGroup>
    <None Update="host.json">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Update="local.settings.json">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <CopyToPublishDirectory>Never</CopyToPublishDirectory>
    </None>
  </ItemGroup>
  <ItemGroup>
    <Using Include="Microsoft.Azure.Functions.Worker" />
    <Using Include="Microsoft.Azure.Functions.Worker.Http" />
    <Using Include="Microsoft.Extensions.Logging" />
    <Using Include="System.Net" />
    <Using Include="System.Threading.ExecutionContext" Alias="ExecutionContext" />
  </ItemGroup>

  <!-- Sentry Setup -->
  <PropertyGroup Condition="'$(Configuration)' == 'Release' and '$(DIVISIBILL_SENTRY_DSN)' != ''">

    <!-- Configure Sentry org and project -->
    <SentryOrg>autoplus</SentryOrg>
    <SentryProject>divisibillws</SentryProject>

    <!-- Sends symbols to Sentry, enabling symbolification of stack traces. -->
    <SentryUploadSymbols>true</SentryUploadSymbols>

    <!-- Sends sources to Sentry, enabling display of source context. -->
    <SentryUploadSources>true</SentryUploadSources>

  </PropertyGroup>

  <!--
  Generate the file holding the build secrets on every build
  First get the secrets from environment variables
  Note that DIVISIBILL_PLAY_CREDENTIALS should be a long (typically 4kB) base64 text string
  -->
  <PropertyGroup>
    <DivisiBillSentryDsn Condition="'$(DivisiBillSentryDsn)' == ''">$(DIVISIBILLWS_SENTRY_DSN)</DivisiBillSentryDsn>
    <BuildInfoText>
      <![CDATA[
//----------------------
// <auto-generated>
//     By MsBuild processing the project file -  DO NOT EDIT THIS FILE, CHANGES WILL BE LOST WHEN IT IS REGENERATED
// </auto-generated>
//----------------------

namespace DivisiBillWs.Generated%3b

internal class BuildInfo
{
    internal const string DivisiBillSentryDsn = "$(DivisiBillSentryDsn)"%3b
    internal const string DivisiBillCognitiveServicesEndpoint = "$(DIVISIBILL_WS_CS_EP)"%3b
    internal const string DivisiBillCognitiveServicesKey = "$(DIVISIBILL_WS_CS_KEY)"%3b
    internal const string PlayCredentialB64 = "$(DIVISIBILL_PLAY_CREDENTIALS)"%3b
}
]]>
    </BuildInfoText>
  </PropertyGroup>

  <Target Name="AddBuildInfo" Inputs="$(MSBuildAllProjects)" BeforeTargets="BeforeCompile;CoreCompile" Outputs="ForceBuildEveryTime">
    <Message Text="AddBuildInfo was invoked for file $(BuildInfoFilePath)" Importance="Low" />
    <PropertyGroup>
      <BuildInfoFilePath>$(IntermediateOutputPath)BuildGenerated\BuildInfo.g.cs</BuildInfoFilePath>
    </PropertyGroup>
    <ItemGroup>
      <Compile Include="$(BuildInfoFilePath)" />
      <FileWrites Include="$(BuildInfoFilePath)" />
    </ItemGroup>
    <WriteLinesToFile Lines="$(BuildInfoText)" File="$(BuildInfoFilePath)" Overwrite="true" />
  </Target>
  <!--End file generation-->

  <!--Generate the file holding the build timestamp, this changes on every build-->
  <PropertyGroup>
    <Today>$([System.DateTime]::UtcNow.ToString("O"))</Today>
    <BuildEnvironmentText>
      <![CDATA[
//----------------------
// <auto-generated>
//     By MsBuild processing the project file -  DO NOT EDIT THIS FILE, CHANGES WILL BE LOST WHEN IT IS REGENERATED
// </auto-generated>
//----------------------

namespace DivisiBillWs.Generated%3b

internal static class BuildEnvironment
{
    internal const string BuildTimeString = "$(Today)"%3b
}
]]>
    </BuildEnvironmentText>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(TargetFramework)|$(Platform)'=='Release|net8.0-android|AnyCPU'">
    <RunAOTCompilation>False</RunAOTCompilation>
  </PropertyGroup>

  <Target Name="AddBuildEnvironment" BeforeTargets="BeforeBuild;CoreCompile" Inputs="$(MSBuildAllProjects)" Outputs="ForceBuildEveryTime">
    <Message Text="AddBuildEnvironment was invoked for file $(BuildInfoFilePath)" Importance="low" />
    <PropertyGroup>
      <BuildEnvironmentFilePath>$(IntermediateOutputPath)BuildGenerated\BuildEnvironment.g.cs</BuildEnvironmentFilePath>
    </PropertyGroup>
    <ItemGroup>
      <Compile Include="$(BuildEnvironmentFilePath)" />
      <FileWrites Include="$(BuildEnvironmentFilePath)" />
    </ItemGroup>
    <WriteLinesToFile Lines="$(BuildEnvironmentText)" File="$(BuildEnvironmentFilePath)" Overwrite="true" />
  </Target>
  <!--End file generation-->
</Project>